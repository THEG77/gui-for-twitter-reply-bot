# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\Cool\Cool\Python stuff\QTmaybe\twitterreplygui\untitled2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import main
import json,time

class Ui_Form(object):
    def updatemediafilename(self):
        currow = self.listWidget_2.currentRow()
        curtext = self.listWidget_2.item(currow).text()
        updatedfilename = self.lineEdit_2.text()
        f = open("config.json")
        data = json.load(f)
        f.close()
        data["isMediaAttached"][curtext][1] = updatedfilename
        with open("config.json","w") as outfile:
            json.dump(data,outfile)
    def managewithmedia(self,clicked):
        f = open("config.json")
        data = json.load(f)
        f.close()
        currentselecteduserow = self.listWidget_2.currentRow()
        currentselectedusername = self.listWidget_2.item(currentselecteduserow).text()
        
        if clicked:
            imagename = self.lineEdit_2.text()
            data["isMediaAttached"][currentselectedusername][0] = "true"
            data ["isMediaAttached"][currentselectedusername][1] = imagename
            with open("config.json","w") as outfile:
                json.dump(data,outfile)


        else:
             data["isMediaAttached"][currentselectedusername][0] = "false"
             with open("config.json","w") as outfile:
                json.dump(data,outfile)

    def deleteselectedreply(self):
        try:
            currentuserrow = self.listWidget_2.currentRow()
            currentusername = self.listWidget_2.item(currentuserrow).text()
            currentreplyrow = self.listWidget_3.currentRow()
            f = open("config.json")
            data = json.load(f)
            f.close()
            del data["replies"][currentusername][currentreplyrow]
            with open("config.json","w") as outfile:
                json.dump(data,outfile)
            self.refreshlist3()
        except Exception as e:
            print(e)
    def showuserreplylist(self):
        f = open("config.json")
        data = json.load(f)
        f.close()
        currentrow2 = self.listWidget_2.currentRow()
        currentselectedusername2 = self.listWidget_2.item(currentrow2).text()
        if currentselectedusername2 not in data["replies"]:
            pass
            # data["replies"].append(dict(currentselectedusername2 = []))
            # with open("config.json","w") as outfile:
            #     json.dump(data,outfile)
            # self.refreshlist2()    
        else:
            self.listWidget_3.clear()
            for replies in data["replies"][currentselectedusername2]:
                item = QtWidgets.QListWidgetItem(replies)
                self.listWidget_3.addItem(item)

    def addusername(self):
        try:
            usernametoadd = self.lineEdit_3.text()
            f = open("config.json")
            data  = json.load(f)
            f.close()
            data["usernameList"].append(usernametoadd)
            if usernametoadd not in data["replies"]:
                data["replies"][usernametoadd] = []
                data["isMediaAttached"][usernametoadd] = ["false",""]
            with open("config.json","w") as outfile:
                json.dump(data,outfile)   
            self.refreshlist()

            item = QtWidgets.QListWidgetItem(usernametoadd)            
            self.listWidget_2.addItem(item)
                    
            self.lineEdit_3.clear()                    
        except Exception as e:
            print(e)

    def addreply(self):
        try:
            replytoadd = self.lineEdit_5.text()
            currentuserindex = self.listWidget_2.currentRow()
            currentusertext = self.listWidget_2.item(currentuserindex).text()
            
            f = open("config.json")
            data  = json.load(f)
            if currentusertext not in data["replies"]:
                data["replies"][currentusertext] = []
            data["replies"][currentusertext].append(replytoadd)
            with open("config.json","w") as outfile:
                json.dump(data,outfile)   
               
            self.refreshlist3()          
            self.lineEdit_5.clear()          
        except Exception as e:
            print(e)        
    def editusername(self):
        updatedtext = self.lineEdit.text()
        currentlistindex = self.listWidget.currentRow()
        try:
            f = open("config.json")
            data = json.load(f)
            f.close()
            data["usernameList"][currentlistindex] = updatedtext
            with open("config.json","w") as outfile:
                json.dump(data,outfile)
            self.refreshlist()
        except Exception as e:
            print(e)

    def editreplytext(self):
        updatedtext = self.lineEdit_4.text()
        currentuserindex = self.listWidget_2.currentRow()
        currentusername = self.listWidget_2.item(currentuserindex).text()
        currentreplyindex = self.listWidget_3.currentRow()
        try:
            f = open("config.json")
            data = json.load(f)
            f.close()
            data["replies"][currentusername][currentreplyindex] = updatedtext
            with open("config.json","w") as outfile:
                json.dump(data,outfile)
            self.refreshlist3()
        except Exception as e:
            print(e)        
    def updateedittextbox(self):
        try:
            currentselectedrow = self.listWidget.currentRow()
            currentselectedtext = self.listWidget.item(currentselectedrow).text()
            print("Current selected row :" , currentselectedrow)
            self.lineEdit.setText(currentselectedtext)
            self.refreshlist()
        except Exception as e:
            print(e)
    def updateedittextbox2(self):
        try:
            currentselectedrow = self.listWidget_3.currentRow()
            currentselectedtext = self.listWidget_3.item(currentselectedrow).text()
            self.lineEdit_4.setText(currentselectedtext)
            
        except Exception as e:
            print(e)
    def updateedittextbox3(self):
        try:
            currentselectedrow = self.listWidget_2.currentRow()
            currentselectedtext = self.listWidget_2.item(currentselectedrow).text()
            f = open("config.json")
            data = json.load(f)
            f.close()

            self.lineEdit_2.setText(data["isMediaAttached"][currentselectedtext][1])
            
        except Exception as e:
            print(e)              
    def refreshlist(self):
        try:
            self.listWidget.clear()
            f = open("config.json")
            jsondata = json.load(f)
            f.close()
            for username in jsondata['usernameList']:
                item = QtWidgets.QListWidgetItem(username)
                self.listWidget.addItem(item)
            f.close()
            
        except Exception as e:
            print(e)

    def refreshlist3(self):
        try:
            self.listWidget_3.clear()
            currentselectedrow = self.listWidget_2.currentRow()
            currentselectedtext = self.listWidget_2.item(currentselectedrow).text()

            f = open("config.json")
            data = json.load(f)
            f.close()
            if currentselectedtext in  data["replies"]:
                 for reply in data["replies"][currentselectedtext]:
                     item = QtWidgets.QListWidgetItem(reply)
                     self.listWidget_3.addItem(item)
            print("reply 3 working")                     
        except Exception as e:
            print(e)    
    def openaddusername(self):
        self.window =  QtWidgets.QMainWindow()
        self.ui = main.Ui_untitled3.Ui_Form2()
        self.ui.setupUi3(self.window)
        self.window.show()

    def deleteselected(self):
        try:
            # currentselectedrow = self.listWidget.currentRow()
            # print(currentselectedrow)
            
            # currentselectedtext = self.listWidget.item(currentselectedrow).text()
            # print(currentselectedtext)
            #Doint it the dumb way...
            currentselectedtext = self.lineEdit.text()
            f = open("config.json")
            data = json.load(f)
            f.close()
            i = 0
            for element in data["usernameList"]:
                print(i)
                if element == currentselectedtext:
                    del data["usernameList"][i]
                    print("Deleted Username")
                    numofReplies = len(data["replies"][currentselectedtext])-1
                    while numofReplies>=0:
                        data["replies"][currentselectedtext][numofReplies]
                        numofReplies-=1
                    del data["replies"][currentselectedtext]
                    print("Deleted Replies")
                    
                    del data["isMediaAttached"][currentselectedtext][1]
                    del data["isMediaAttached"][currentselectedtext][0]
                    del data["isMediaAttached"][currentselectedtext]
                    print("Deleted MEdiaData")
                    with open("config.json","w") as outfile:
                        json.dump(data,outfile)
                    print("done")    
                i+=1    
            self.refreshlist()
            
            
        except Exception as e:
            print(e)        
    
    
    def refreshlist2(self):
        try:
            self.listWidget_2.clear()
            f = open("config.json")
            jsondata = json.load(f)
            f.close()
            for username in jsondata['usernameList']:
                item = QtWidgets.QListWidgetItem(username)
                self.listWidget_2.addItem(item)
            print("func called")
        except Exception as e:
            print(e)
    def setupUi2(self, Form):
        Form.setObjectName("Form")
        Form.resize(923, 522)
        self.tabWidget = QtWidgets.QTabWidget(Form)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 921, 521))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.listWidget = QtWidgets.QListWidget(self.tab)
        self.listWidget.setGeometry(QtCore.QRect(20, 10, 321, 411))
        self.listWidget.setObjectName("listWidget")
        self.refreshlist()
        

     

        self.pushButton_3 = QtWidgets.QPushButton(self.tab)
        self.pushButton_3.setGeometry(QtCore.QRect(470, 360, 171, 61))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.deleteselected)


        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setGeometry(QtCore.QRect(420, 10, 261, 111))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(10, 20, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit.setFont(font)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(90, 60, 91, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.editusername)

        self.groupBox_3 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_3.setGeometry(QtCore.QRect(420, 150, 261, 111))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 20, 241, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_2.setGeometry(QtCore.QRect(90, 60, 91, 31))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.addusername)
        
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.listWidget_2 = QtWidgets.QListWidget(self.tab_2)
        self.listWidget_2.setGeometry(QtCore.QRect(20, 10, 191, 401))
        self.listWidget_2.setObjectName("listWidget_2")
        self.refreshlist2()

        self.listWidget_3 = QtWidgets.QListWidget(self.tab_2)
        self.listWidget_3.setGeometry(QtCore.QRect(230, 10, 271, 401))
        self.listWidget_3.setObjectName("listWidget_3")
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_2.setGeometry(QtCore.QRect(560, 300, 331, 191))
        self.groupBox_2.setObjectName("groupBox_2")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 110, 311, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.radioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton.setGeometry(QtCore.QRect(10, 30, 151, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.radioButton.toggled.connect(self.managewithmedia)


        self.label = QtWidgets.QLabel(self.groupBox_2)
        self.label.setGeometry(QtCore.QRect(10, 90, 171, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_4.setGeometry(QtCore.QRect(130, 150, 75, 23))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.updatemediafilename)


        self.label_2 = QtWidgets.QLabel(self.tab_2)
        self.label_2.setGeometry(QtCore.QRect(560, 270, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setItalic(True)
        font.setKerning(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.groupBox_4 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_4.setGeometry(QtCore.QRect(560, 10, 331, 111))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.groupBox_4)
        self.lineEdit_4.setGeometry(QtCore.QRect(10, 20, 311, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setText("")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.groupBox_4)
        self.pushButton_5.setGeometry(QtCore.QRect(120, 60, 91, 31))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_5.clicked.connect(self.editreplytext)


        self.groupBox_5 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_5.setGeometry(QtCore.QRect(560, 130, 331, 111))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.groupBox_5.setFont(font)
        self.groupBox_5.setObjectName("groupBox_5")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_5.setGeometry(QtCore.QRect(10, 20, 311, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setText("")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_6.setGeometry(QtCore.QRect(120, 60, 91, 31))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.clicked.connect(self.addreply)

        self.pushButton_7 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_7.setGeometry(QtCore.QRect(310, 430, 121, 31))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_7.clicked.connect(self.deleteselectedreply)

        self.tabWidget.addTab(self.tab_2, "")

        try:
            self.listWidget.currentRowChanged.connect(self.updateedittextbox)
            print("TEAST")
        except Exception as e:
            print(e)

        try:
            self.listWidget_2.currentRowChanged.connect(self.showuserreplylist)
            self.listWidget_2.currentRowChanged.connect(self.updateedittextbox3)
            print("TEAST2")
        except Exception as e:
            print(e)

        try:
            self.listWidget_3.currentRowChanged.connect(self.updateedittextbox2)
            print("TEAST3")
        except Exception as e:
            print(e)       

        self.retranslateUi(Form)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Settings"))
        self.pushButton_3.setText(_translate("Form", "Delete Selected"))
        self.groupBox.setTitle(_translate("Form", "Edit Selected"))
        self.pushButton.setText(_translate("Form", "Save"))
        self.groupBox_3.setTitle(_translate("Form", "Add New"))
        self.pushButton_2.setText(_translate("Form", "Add"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("Form", "Username List"))
        self.groupBox_2.setTitle(_translate("Form", "Media"))
        self.lineEdit_2.setPlaceholderText(_translate("Form", "Image Name"))
        self.radioButton.setText(_translate("Form", "Use Image in Replies"))
        self.label.setText(_translate("Form", "Image name with extension"))
        self.pushButton_4.setText(_translate("Form", "Update"))
        self.label_2.setText(_translate("Form", "No Image Attached"))
        self.groupBox_4.setTitle(_translate("Form", "Edit Selected"))
        self.pushButton_5.setText(_translate("Form", "Save"))
        self.groupBox_5.setTitle(_translate("Form", "Add New"))
        self.pushButton_6.setText(_translate("Form", "Add"))
        self.pushButton_7.setText(_translate("Form", "Delete Selected"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("Form", "Reply Text"))
